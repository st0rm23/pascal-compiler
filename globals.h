#ifndef _GLOBAL_H_
#define _GLOBAL_H_

#include <string.h>
#include <stdio.h>
typedef enum{
program,
program_head,
routine,
sub_routine,
routine_head,
label_part,
const_part,
const_expr_list,
const_value,
type_part,
type_decl_list,
type_definition,
type_decl,
simple_type_decl,
array_type_decl,
record_type_decl,
field_decl_list,
field_decl,
name_list,
var_part,
var_decl_list,
var_decl,
routine_part,
function_decl,
function_head,
procedure_decl,
procedure_head,
parameters,
para_decl_list,
para_type_list,
var_para_list,
val_para_list,
routine_body,
compound_stmt,
stmt_list,
stmt,
non_label_stmt,
assign_stmt,
proc_stmt,
if_stmt,
else_clause,
repeat_stmt,
while_stmt,
for_stmt,
direction,
case_stmt,
case_expr_list,
case_expr,
goto_stmt,
expression_list,
expression,
expr,
term,
factor,
args_list,

TOKEN_AND,
TOKEN_ARRAY,
TOKEN_ASSIGN,
TOKEN_BEGIN,
TOKEN_CASE,
TOKEN_CHAR,
TOKEN_COLON,
TOKEN_COMMA,
TOKEN_CONST,
TOKEN_DIV,
TOKEN_DO,
TOKEN_DOT,
TOKEN_DOTDOT,
TOKEN_DOWNTO,
TOKEN_ELSE,
TOKEN_END,
TOKEN_EQUAL,
TOKEN_FOR,
TOKEN_FUNCTION,
TOKEN_GE,
TOKEN_GOTO,
TOKEN_GT, 
TOKEN_ID,
TOKEN_IF,
TOKEN_INTEGER,
TOKEN_LB,
TOKEN_LE,
TOKEN_LP,
TOKEN_LT,
TOKEN_MINUS,
TOKEN_MOD,
TOKEN_MUL,
TOKEN_NOT,
TOKEN_OF,
TOKEN_OR,
TOKEN_PLUS,
TOKEN_PROCEDURE,
TOKEN_PROGRAM,
TOKEN_RB,
TOKEN_READ,
TOKEN_REAL,
TOKEN_RECORD,
TOKEN_REPEAT,
TOKEN_RP,
TOKEN_SEMI,
TOKEN_STRING,
TOKEN_SYS_CON,
TOKEN_SYS_FUNCT,
TOKEN_SYS_PROC,
TOKEN_SYS_TYPE,
TOKEN_THEN,
TOKEN_TO,
TOKEN_TYPE,
TOKEN_UNEQUAL,
TOKEN_UNTIL,
TOKEN_VAR,
TOKEN_WHILE,
} NodeKind;

typedef struct treeNode{
	struct treeNode * child;
	struct treeNode * sibling;
    int lineno;

	NodeKind nodekind;
	char *tokenString;
} TreeNode;

extern int lineno;
extern int traceflag;
#endif
